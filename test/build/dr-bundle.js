/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./test/glsl/mainTexture.glsl":
/*!************************************!*\
  !*** ./test/glsl/mainTexture.glsl ***!
  \************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"uniform vec2 resolution;\\r\\nuniform sampler2D A;\\r\\nout vec4 fragColor;\\r\\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\\r\\n{\\r\\n    vec2 q=fragCoord/resolution.xy;\\r\\n    vec3 col=texture(A,q).xyz;\\r\\n    fragColor=vec4(col,1.);\\r\\n}\\r\\nvoid main(void){\\r\\n    mainImage(fragColor,gl_FragCoord.xy);\\r\\n}\");\n\n//# sourceURL=webpack://demolishedrenderer/./test/glsl/mainTexture.glsl?");

/***/ }),

/***/ "./test/glsl/noise.texture.frag.glsl":
/*!*******************************************!*\
  !*** ./test/glsl/noise.texture.frag.glsl ***!
  \*******************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"uniform float time;\\r\\nuniform vec2 resolution;\\r\\nuniform int frame;\\r\\nout vec4 fragColor;\\r\\n\\r\\nfloat g(in vec2 xy, in float seed)\\r\\n{\\r\\n    return fract(tan(distance(xy*1.61803398874989484820459, xy)*seed)*xy.x);\\r\\n}\\r\\n\\r\\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\\r\\n{\\r\\n     vec2 uv = fragCoord.xy;\\r\\n     uv -= floor(uv / 289.0) * 289.0;\\r\\n     uv += vec2(223.35734, 550.56781);\\r\\n     uv *= uv;\\r\\n     float xy = uv.x * uv.y;\\r\\n     fragColor = vec4(fract(xy * 0.00000012),\\r\\n               fract(xy * 0.00000543),\\r\\n               fract(xy * 0.00000192),\\r\\n               fract(xy * 0.00000423));\\r\\n\\r\\n     // float t= time;\\r\\n     \\r\\n     // vec2 uv = fragCoord.xy ;\\r\\n\\r\\n     // vec4 rgba = vec4(g(uv, fract(t)+1.0), // r\\r\\n     //            g(uv, fract(t)+2.0), // g\\r\\n     //            g(uv, fract(t)+3.0), // b\\r\\n     //            1.0);   \\r\\n\\r\\n\\t\\r\\n     // fragColor = rgba;\\r\\n}\\r\\nvoid main(void){\\r\\n     mainImage(fragColor,gl_FragCoord.xy);\\r\\n}\");\n\n//# sourceURL=webpack://demolishedrenderer/./test/glsl/noise.texture.frag.glsl?");

/***/ }),

/***/ "./test/glsl/volcanic-frag.glsl":
/*!**************************************!*\
  !*** ./test/glsl/volcanic-frag.glsl ***!
  \**************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"uniform float time;\\r\\nuniform vec2 mouse;\\r\\nuniform vec2 resolution;\\r\\nuniform sampler2D iChannel0;\\r\\nuniform sampler2D iChannel1;\\r\\nuniform sampler2D iChannel2;\\r\\nuniform int frame;\\r\\nuniform vec3 iMouse;\\r\\n\\r\\nout vec4 fragColor;\\r\\n\\r\\n#define iTime time\\r\\n#define iResolution resolution\\r\\n#define HIGH_QUALITY_NOISE\\r\\n\\r\\nfloat noise( in vec3 x ){\\r\\n    vec3 p = floor(x);\\r\\n    vec3 f = fract(x);\\r\\n\\tf = f*f*(3.0-2.0*f);\\r\\n#ifndef HIGH_QUALITY_NOISE\\r\\n\\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\\r\\n\\tvec2 rg = textureLod( iChannel0, (uv+ 0.5)/256.0, 0. ).yx;\\r\\n#else\\r\\n\\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z);\\r\\n\\tvec2 rg1 = textureLod( iChannel0, (uv+ vec2(0.5,0.5))/256.0, 0. ).yx;\\r\\n\\tvec2 rg2 = textureLod( iChannel0, (uv+ vec2(1.5,0.5))/256.0, 0. ).yx;\\r\\n\\tvec2 rg3 = textureLod( iChannel0, (uv+ vec2(0.5,1.5))/256.0, 0. ).yx;\\r\\n\\tvec2 rg4 = textureLod( iChannel0, (uv+ vec2(1.5,1.5))/256.0, 0. ).yx;\\r\\n\\tvec2 rg = mix( mix(rg1,rg2,f.x), mix(rg3,rg4,f.x), f.y );\\r\\n#endif\\t\\r\\n\\treturn mix( rg.x, rg.y, f.z );\\r\\n}\\r\\n\\r\\nfloat noise( in vec2 x )\\r\\n{\\r\\n    vec2 p = floor(x);\\r\\n    vec2 f = fract(x);\\r\\n\\tvec2 uv = p.xy + f.xy*f.xy*(3.0-2.0*f.xy);\\r\\n\\treturn textureLod( iChannel0, (uv+118.4)/256.0, 0. ).x;\\r\\n}\\r\\n\\r\\nvec4 texcube( sampler2D sam, in vec3 p, in vec3 n )\\r\\n{\\r\\n\\tvec4 x = texture( sam, p.yz );\\r\\n\\tvec4 y = texture( sam, p.zx );\\r\\n\\tvec4 z = texture( sam, p.xy );\\r\\n\\treturn x*abs(n.x) + y*abs(n.y) + z*abs(n.z);\\r\\n}\\r\\n\\r\\n//=====================================================================\\r\\n\\r\\nfloat lava( vec2 p )\\r\\n{\\r\\n\\tp += vec2(2.0,4.0);\\r\\n    float f;\\r\\n    f  = 0.5000*noise( p ); p = p*2.02;\\r\\n    f += 0.2500*noise( p ); p = p*2.03;\\r\\n    f += 0.1250*noise( p ); p = p*2.01;\\r\\n    f += 0.0625*noise( p );\\r\\n    return f;\\r\\n}\\r\\n\\r\\nconst mat3 m = mat3( 0.00,  0.80,  0.60,\\r\\n                    -0.80,  0.36, -0.48,\\r\\n                    -0.60, -0.48,  0.64 );\\r\\n\\r\\nfloat displacement( vec3 p )\\r\\n{\\r\\n\\tp += vec3(1.0,0.0,0.8);\\r\\n\\t\\r\\n    float f;\\r\\n    f  = 0.5000*noise( p ); p = m*p*2.02;\\r\\n    f += 0.2500*noise( p ); p = m*p*2.03;\\r\\n    f += 0.1250*noise( p ); p = m*p*2.01;\\r\\n    f += 0.0625*noise( p ); \\r\\n\\t\\r\\n\\tfloat n = noise( p*3.5 );\\r\\n    f += 0.03*n*n;\\r\\n\\t\\r\\n    return f;\\r\\n}\\r\\n\\r\\nfloat mapTerrain( in vec3 pos )\\r\\n{\\r\\n\\treturn pos.y*0.1 + (displacement(pos*vec3(0.8,1.0,0.8)) - 0.4)*(1.0-smoothstep(1.0,3.0,pos.y));\\r\\n}\\r\\n\\r\\nfloat raymarchTerrain( in vec3 ro, in vec3 rd )\\r\\n{\\r\\n\\tfloat maxd = 30.0;\\r\\n    float t = 0.1;\\r\\n    for( int i=0; i<256; i++ )\\r\\n    {\\r\\n\\t    float h = mapTerrain( ro+rd*t );\\r\\n        if( h<(0.001*t) || t>maxd ) break;\\r\\n        t += h*0.8;\\r\\n    }\\r\\n\\r\\n    if( t>maxd ) t=-1.0;\\r\\n    return t;\\r\\n}\\r\\n\\r\\nvec3 calcNormal( in vec3 pos, in float t )\\r\\n{\\r\\n    vec3 eps = vec3( max(0.02,0.001*t),0.0,0.0);\\r\\n\\treturn normalize( vec3(\\r\\n           mapTerrain(pos+eps.xyy) - mapTerrain(pos-eps.xyy),\\r\\n           mapTerrain(pos+eps.yxy) - mapTerrain(pos-eps.yxy),\\r\\n           mapTerrain(pos+eps.yyx) - mapTerrain(pos-eps.yyx) ) );\\r\\n\\r\\n}\\r\\n\\r\\nvec3 lig = normalize( vec3(-0.3,0.4,0.7) );\\r\\n\\t\\r\\nvec4 mapClouds( in vec3 pos )\\r\\n{\\r\\n\\tvec3 q = pos*0.5 + vec3(0.0,-iTime,0.0);\\r\\n\\t\\r\\n\\tfloat d;\\r\\n    d  = 0.5000*noise( q ); q = q*2.02;\\r\\n    d += 0.2500*noise( q ); q = q*2.03;\\r\\n    d += 0.1250*noise( q ); q = q*2.01;\\r\\n    d += 0.0625*noise( q );\\r\\n\\t\\t\\r\\n\\td = d - 0.55;\\r\\n\\td *= smoothstep( 0.5, 0.55, lava(0.1*pos.xz)+0.01 );\\r\\n\\r\\n\\td = clamp( d, 0.0, 1.0 );\\r\\n\\t\\r\\n\\tvec4 res = vec4( d );\\r\\n\\r\\n\\tres.xyz = mix( vec3(1.0,0.8,0.7), 0.2*vec3(0.4,0.4,0.4), res.x );\\r\\n\\tres.xyz *= 0.25;\\r\\n\\tres.xyz *= 0.5 + 0.5*smoothstep( -2.0, 1.0, pos.y );\\r\\n\\t\\r\\n\\treturn res;\\r\\n}\\r\\n\\r\\nvec4 raymarchClouds( in vec3 ro, in vec3 rd, in vec3 bcol, float tmax )\\r\\n{\\r\\n\\tvec4 sum = vec4( 0.0 );\\r\\n\\r\\n\\tfloat sun = pow( clamp( dot(rd,lig), 0.0, 1.0 ),6.0 );\\r\\n\\tfloat t = 0.0;\\r\\n\\tfor( int i=0; i<60; i++ )\\r\\n\\t{\\r\\n\\t\\tif( t>tmax || sum.w>0.95 ) break;//continue;\\r\\n\\t\\tvec3 pos = ro + t*rd;\\r\\n\\t\\tvec4 col = mapClouds( pos );\\r\\n\\t\\t\\r\\n        col.xyz += vec3(1.0,0.7,0.4)*0.4*sun*(1.0-col.w);\\r\\n\\t\\tcol.xyz = mix( col.xyz, bcol, 1.0-exp(-0.00006*t*t*t) );\\r\\n\\t\\t\\r\\n\\t\\tcol.rgb *= col.a;\\r\\n\\r\\n\\t\\tsum = sum + col*(1.0 - sum.a);\\t\\r\\n\\r\\n\\t\\tt += max(0.1,0.05*t);\\r\\n\\t}\\r\\n\\r\\n\\tsum.xyz /= (0.001+sum.w);\\r\\n\\r\\n\\treturn clamp( sum, 0.0, 1.0 );\\r\\n}\\r\\n\\r\\nfloat softshadow( in vec3 ro, in vec3 rd, float mint, float k )\\r\\n{\\r\\n    float res = 1.0;\\r\\n    float t = mint;\\r\\n    for( int i=0; i<64; i++ )\\r\\n    {\\r\\n        float h = mapTerrain(ro + rd*t);\\r\\n\\t\\th = max( h, 0.0 );\\r\\n        res = min( res, k*h/t );\\r\\n        t += clamp( h, 0.02, 0.5 );\\r\\n\\t\\tif( res<0.001 ) break;\\r\\n    }\\r\\n    return clamp(res,0.0,1.0);\\r\\n}\\r\\n\\r\\nvec3 path( float time )\\r\\n{\\r\\n\\treturn vec3( 16.0*cos(0.2+0.5*.1*time*1.5), 1.5, 16.0*sin(0.1+0.5*0.11*time*1.5) );\\r\\n\\t\\r\\n}\\r\\n\\r\\nmat3 setCamera( in vec3 ro, in vec3 ta, float cr )\\r\\n{\\r\\n\\tvec3 cw = normalize(ta-ro);\\r\\n\\tvec3 cp = vec3(sin(cr), cos(cr),0.0);\\r\\n\\tvec3 cu = normalize( cross(cw,cp) );\\r\\n\\tvec3 cv = normalize( cross(cu,cw) );\\r\\n    return mat3( cu, cv, cw );\\r\\n}\\r\\n\\r\\nvoid moveCamera( float time, out vec3 oRo, out vec3 oTa, out float oCr, out float oFl )\\r\\n{\\r\\n\\tvec3 ro = path( time+0.0 );\\r\\n\\tvec3 ta = path( time+1.6 );\\r\\n\\tta.y *= 0.35 + 0.25*sin(0.09*time);\\r\\n\\tfloat cr = 0.3*sin(1.0+0.07*time);\\r\\n    oRo = ro;\\r\\n    oTa = ta;\\r\\n    oCr = cr;\\r\\n    oFl = 2.1;\\r\\n}\\r\\n\\r\\n\\r\\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\\r\\n{\\r\\n    vec2 q = fragCoord.xy / iResolution.xy;\\r\\n\\tvec2 p = -1.0 + 2.0*q;\\r\\n\\tp.x *= iResolution.x / iResolution.y;\\r\\n\\t\\r\\n    // camera\\t\\r\\n\\tfloat off = step( 0.001, iMouse.z )*6.0*iMouse.x/iResolution.x;\\r\\n    float time = 3.4 +iTime + off;\\r\\n\\r\\n    vec3 ro, ta; float cr, fl;\\r\\n    moveCamera( time, ro, ta, cr, fl );\\r\\n\\t// camera2world transform\\r\\n    mat3 cam = setCamera( ro, ta, cr );\\r\\n\\r\\n    // ray    \\r\\n    vec3 rd = cam * normalize(vec3(p.xy,fl));\\r\\n\\r\\n    // sky\\t \\r\\n\\tvec3 col = vec3(0.32,0.36,0.4) - rd.y*0.4;\\r\\n    float sun = clamp( dot(rd,lig), 0.0, 1.0 );\\r\\n\\tcol += vec3(1.0,0.8,0.4)*0.2*pow( sun, 6.0 );\\r\\n    col *= 0.9;\\r\\n\\r\\n\\tvec3 bcol = col;\\r\\n    \\r\\n    // terrain\\t\\r\\n\\tfloat t = raymarchTerrain(ro, rd);\\r\\n    float st = t;\\r\\n    if( t>0.0 )\\r\\n\\t{\\r\\n\\t\\tvec3 pos = ro + t*rd;\\r\\n\\t\\tvec3 nor = calcNormal( pos, t );\\r\\n\\t//\\tvec3 ref = reflect( rd, nor );\\r\\n\\r\\n\\t\\tvec3 bn = -1.0 + 2.0*texcube( iChannel0, 3.0*pos/4.0, nor ).xyz;\\r\\n\\t\\tnor = normalize( nor + 0.6*bn );\\r\\n\\t\\t\\r\\n\\t\\tfloat hh = 1.0 - smoothstep( -2.0, 1.0, pos.y );\\r\\n\\r\\n        // lighting\\r\\n\\t\\tfloat sun = clamp( dot( nor, lig ), 0.0, 1.0 );\\r\\n\\t\\tfloat sha = 0.0; if( sun>0.01) sha=softshadow(pos,lig,0.01,32.0);\\r\\n\\t\\tfloat bac = clamp( dot( nor, normalize(lig*vec3(-1.0,0.0,-1.0)) ), 0.0, 1.0 );\\r\\n\\t\\tfloat sky = 0.5 + 0.5*nor.y;\\r\\n        float lav = smoothstep( 0.5, 0.55, lava(0.1*pos.xz) )*hh*clamp(0.5-0.5*nor.y,0.0,1.0);\\r\\n\\t\\tfloat occ = pow( (1.0-displacement(pos*vec3(0.8,1.0,0.8)))*1.6-0.5, 2.0 );\\r\\n\\r\\n\\t\\tfloat amb = 1.0;\\r\\n\\r\\n\\t\\tcol = vec3(0.8);\\r\\n\\r\\n\\t\\tvec3 lin = vec3(0.0);\\r\\n\\t\\tlin += 1.4*sun*vec3(1.80,1.27,0.99)*pow(vec3(sha),vec3(1.0,1.2,1.5));\\r\\n\\t\\tlin += 0.9*sky*vec3(0.16,0.20,0.40)*occ;\\r\\n\\t\\tlin += 0.9*bac*vec3(0.40,0.28,0.20)*occ;\\r\\n\\t\\tlin += 0.9*amb*vec3(0.15,0.17,0.20)*occ;\\r\\n\\t\\tlin += lav*vec3(3.00,0.61,0.00);\\r\\n\\r\\n        // surface shading/material\\t\\t\\r\\n\\t\\tcol = texcube( iChannel1, 0.5*pos, nor ).xyz;\\r\\n\\t\\tcol = col*(0.2+0.8*texcube( iChannel2, 4.0*vec3(2.0,8.0,2.0)*pos, nor ).x);\\r\\n\\t\\tvec3 verde = vec3(1.0,0.9,0.2);\\r\\n\\t\\tverde *= texture( iChannel2, pos.xz ).xyz;\\r\\n\\t\\tcol = mix( col, 0.8*verde, hh );\\r\\n\\t\\t\\r\\n\\t\\tfloat vv = smoothstep( 0.0, 0.8, nor.y )*smoothstep(0.0, 0.1, pos.y-0.8 );\\r\\n\\t\\tverde = vec3(0.2,0.45,0.1);\\r\\n\\t\\tverde *= texture( iChannel2, 30.0*pos.xz ).xyz;\\r\\n\\t\\tverde += 0.2*texture( iChannel2, 1.0*pos.xz ).xyz;\\r\\n\\t\\tvv *= smoothstep( 0.0, 0.5, texture( iChannel2, 0.1*pos.xz + 0.01*nor.x ).x );\\r\\n\\t\\tcol = mix( col, verde*1.1, vv );\\r\\n\\t\\t\\r\\n\\t\\tcol = lin * col;\\r\\n\\t\\t\\r\\n        // sun spec\\r\\n        vec3 hal = normalize(lig-rd);\\r\\n        col += 1.0*\\r\\n               vec3(1.80,1.27,0.99)*\\r\\n               pow( clamp(dot(nor,hal),0.0,1.0), 16.0 ) * \\r\\n               sun*sha*\\r\\n               (0.04+0.96*pow(clamp(1.0+dot(hal,rd),0.0,1.0),5.0));\\r\\n            \\r\\n\\t\\t// atmospheric\\r\\n\\t\\tcol = mix( col, (1.0-0.7*hh)*bcol, 1.0-exp(-0.00006*t*t*t) );\\r\\n    }\\r\\n\\r\\n    // sun glow\\r\\n    col += vec3(1.0,0.6,0.2)*0.2*pow( sun, 2.0 )*clamp( (rd.y+0.4)/(0.0+0.4),0.0,1.0);\\r\\n\\t\\r\\n    // smoke\\t\\r\\n\\t{\\r\\n\\tif( t<0.0 ) t=600.0;\\r\\n    vec4 res = raymarchClouds( ro, rd, bcol, t );\\r\\n\\tcol = mix( col, res.xyz, res.w );\\r\\n\\t}\\r\\n\\r\\n    // gamma\\t\\r\\n\\tcol = pow( clamp( col, 0.0, 1.0 ), vec3(0.45) );\\r\\n\\r\\n    // contrast, desat, tint and vignetting\\t\\r\\n\\tcol = col*0.3 + 0.7*col*col*(3.0-2.0*col);\\r\\n\\tcol = mix( col, vec3(col.x+col.y+col.z)*0.33, 0.2 );\\r\\n    col *= 1.25*vec3(1.02,1.05,1.0);\\r\\n      \\r\\n    //-------------------------------------\\r\\n\\t// velocity vectors (through depth reprojection)\\r\\n    //-------------------------------------\\r\\n    float vel = -1.0;\\r\\n    if( st>0.0 )\\r\\n    {\\r\\n        // old camera position\\r\\n        float oldTime = time - 1.0/30.0; // 1/30 of a second blur\\r\\n        vec3 oldRo, oldTa; float oldCr, oldFl;\\r\\n        moveCamera( oldTime, oldRo, oldTa, oldCr, oldFl );\\r\\n        mat3 oldCam = setCamera( oldRo, oldTa, oldCr );\\r\\n\\r\\n        // world spcae\\r\\n        vec3 wpos = ro + rd*st;\\r\\n        // camera space\\r\\n        vec3 cpos = vec3( dot( wpos - oldRo, oldCam[0] ),\\r\\n                          dot( wpos - oldRo, oldCam[1] ),\\r\\n                          dot( wpos - oldRo, oldCam[2] ) );\\r\\n        // ndc space\\r\\n        vec2 npos = oldFl * cpos.xy / cpos.z;\\r\\n        // screen space\\r\\n        vec2 spos = 0.5 + 0.5*npos*vec2(iResolution.y/iResolution.x,1.0);\\r\\n\\r\\n\\r\\n        // compress velocity vector in a single float\\r\\n        vec2 uv = fragCoord/iResolution.xy;\\r\\n        spos = clamp( 0.5 + 0.5*(spos - uv)/0.25, 0.0, 1.0 );\\r\\n        vel = floor(spos.x*255.0) + floor(spos.y*255.0)*256.0;\\r\\n    }\\r\\n\\r\\n    fragColor = vec4( col, vel );\\r\\n}\\r\\n\\r\\n\\r\\nvoid main(void){\\r\\n     mainImage(fragColor,gl_FragCoord.xy);\\r\\n}\");\n\n//# sourceURL=webpack://demolishedrenderer/./test/glsl/volcanic-frag.glsl?");

/***/ }),

/***/ "./test/glsl/volcanic-main.glsl":
/*!**************************************!*\
  !*** ./test/glsl/volcanic-main.glsl ***!
  \**************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"uniform vec2 resolution;\\r\\nuniform sampler2D bufferA;\\r\\nout vec4 fragColor;\\r\\n\\r\\n#define iTime time\\r\\n#define iResolution resolution\\r\\n\\r\\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\\r\\n{\\r\\n    vec2 uv = fragCoord/iResolution.xy;\\r\\n    vec4 data = texture( bufferA, uv );\\r\\n    vec3 col = data.xyz;\\r\\n    // vignetting\\t\\r\\n\\tcol *= 0.5 + 0.5*pow( 16.0*uv.x*uv.y*(1.0-uv.x)*(1.0-uv.y), 0.1 );\\r\\n    fragColor = vec4(col,1.);\\r\\n}\\r\\n\\r\\n\\r\\nvoid main(void){\\r\\n    mainImage(fragColor,gl_FragCoord.xy);\\r\\n}\\r\\n\");\n\n//# sourceURL=webpack://demolishedrenderer/./test/glsl/volcanic-main.glsl?");

/***/ }),

/***/ "./node_modules/stats.js/build/stats.min.js":
/*!**************************************************!*\
  !*** ./node_modules/stats.js/build/stats.min.js ***!
  \**************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, top-level-this-exports */
/*! CommonJS bailout: this is used directly at 2:152-156 */
/*! CommonJS bailout: module.exports is used directly at 2:70-84 */
/***/ (function(module) {

eval("// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){ true?module.exports=e():0})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n\n\n//# sourceURL=webpack://demolishedrenderer/./node_modules/stats.js/build/stats.min.js?");

/***/ }),

/***/ "./src/DR.js":
/*!*******************!*\
  !*** ./src/DR.js ***!
  \*******************/
/*! flagged exports */
/*! export DR [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DR = void 0;\r\nvar Dt_1 = __webpack_require__(/*! ./Dt */ \"./src/Dt.js\");\r\nvar DR = (function () {\r\n    function DR(canvas, v, f, cU) {\r\n        if (cU === void 0) { cU = {}; }\r\n        this.canvas = canvas;\r\n        this.cU = cU;\r\n        this.frameCount = 0;\r\n        this.header = \"#version 300 es\\n#ifdef GL_ES\\nprecision highp float;\\nprecision highp int;\\nprecision mediump sampler3D;\\n#endif\\n\";\r\n        this.targets = new Map();\r\n        this.mainUniforms = new Map();\r\n        this.programs = new Map();\r\n        this.textureCache = new Map();\r\n        var gl = canvas.getContext(\"webgl2\", { preserveDrawingBuffer: true });\r\n        var c = 0, d;\r\n        for (var i in gl)\r\n            \"function\" == typeof gl[i] && (d = (c++ & 255).toString(16), d = d.match(/^[0-9].*$/) ? \"x\" + d : d, gl[d] = gl[i]);\r\n        this.gl = gl;\r\n        var mp = gl.createProgram();\r\n        this.mainProgram = mp;\r\n        gl.viewport(0, 0, canvas.width, canvas.height);\r\n        this.buffer = gl.createBuffer();\r\n        this.surfaceBuffer = gl.createBuffer();\r\n        this.cS(mp, 35633, this.header + v);\r\n        this.cS(mp, 35632, this.header + f);\r\n        gl.linkProgram(mp);\r\n        gl.validateProgram(mp);\r\n        if (!gl.getProgramParameter(mp, gl.LINK_STATUS)) {\r\n            var info = gl.getProgramInfoLog(mp);\r\n            throw 'Could not compile WebGL program. \\n\\n' + info;\r\n        }\r\n        gl.useProgram(mp);\r\n        for (var i_1 = 0; i_1 < gl.getProgramParameter(mp, gl.ACTIVE_UNIFORMS); ++i_1) {\r\n            var u = gl.getActiveUniform(mp, i_1);\r\n            this.mainUniforms.set(u.name, gl.getUniformLocation(mp, u.name));\r\n        }\r\n        this.screenVertexPosition = gl.getAttribLocation(mp, \"pos\");\r\n        gl.enableVertexAttribArray(this.screenVertexPosition);\r\n        gl.bindBuffer(34962, this.buffer);\r\n        gl.bufferData(34962, new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0]), 35044);\r\n    }\r\n    DR.prototype.cS = function (program, type, source) {\r\n        var gl = this.gl;\r\n        var shader = gl.createShader(type);\r\n        gl.shaderSource(shader, source);\r\n        gl.compileShader(shader);\r\n        gl.attachShader(program, shader);\r\n        if (!gl.getShaderParameter(shader, 35713)) {\r\n            gl.getShaderInfoLog(shader).trim().split(\"\\n\").forEach(function (l) {\r\n                return console.error(\"[shader] \" + l);\r\n            });\r\n            throw new Error(\"Error while compiling vertex/fragment\" + source);\r\n        }\r\n        ;\r\n    };\r\n    DR.prototype.aP = function (name) {\r\n        var p = this.gl.createProgram();\r\n        this.programs.set(name, p);\r\n        return p;\r\n    };\r\n    DR.prototype.t = function (data, d) {\r\n        var gl = this.gl;\r\n        var texture = gl.createTexture();\r\n        gl.activeTexture(d);\r\n        gl.bindTexture(3553, texture);\r\n        if (data instanceof Image) {\r\n            gl.texImage2D(3553, 0, 6408, 6408, 5121, data);\r\n        }\r\n        else {\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\r\n        }\r\n        gl.generateMipmap(3553);\r\n        return texture;\r\n    };\r\n    DR.prototype.tC = function (sources, d) {\r\n        var gl = this.gl;\r\n        var texture = gl.createTexture();\r\n        gl.activeTexture(d);\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\r\n        var fetchAll = function (src, key) {\r\n            return new Promise(function (resolve, reject) {\r\n                var image = new Image();\r\n                image.dataset.key = key;\r\n                image.onerror = reject;\r\n                image.onload = function () {\r\n                    resolve(image);\r\n                };\r\n                image.src = src;\r\n            });\r\n        };\r\n        Promise.all(sources.map(function (i) {\r\n            return fetchAll(i.d, i.t);\r\n        })).then(function (data) {\r\n            data.forEach(function (image) {\r\n                var target = image.dataset.key;\r\n                var level = 0;\r\n                var internalFormat = gl.RGBA;\r\n                var width = 512;\r\n                var height = 512;\r\n                var format = gl.RGBA;\r\n                var type = gl.UNSIGNED_BYTE;\r\n                gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\r\n                gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\r\n                gl.texImage2D(target, level, internalFormat, format, type, image);\r\n                gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n            });\r\n        });\r\n        gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n        return texture;\r\n    };\r\n    DR.prototype.aA = function (assets, cb) {\r\n        var _this = this;\r\n        var cache = function (k, n, v, f) {\r\n            _this.textureCache.set(k, { unit: n, src: v, fn: f });\r\n        };\r\n        var p = function (key, texture) {\r\n            var unit = texture.unit;\r\n            return new Promise(function (resolve) {\r\n                if (!texture.src) {\r\n                    cache(key, unit, _this.t(new Uint8Array(1024), unit), texture.fn);\r\n                    resolve(key);\r\n                }\r\n                else {\r\n                    if (!Array.isArray(texture.src)) {\r\n                        var i_2 = new Image();\r\n                        i_2.onload = function (e) {\r\n                            cache(key, unit, _this.t(i_2, unit), null);\r\n                            resolve(key);\r\n                        };\r\n                        i_2.src = texture.src;\r\n                    }\r\n                    else {\r\n                        cache(key, unit, _this.tC(texture.src, unit), texture.fn);\r\n                        resolve(key);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        Promise.all(Object.keys(assets).map(function (key) {\r\n            return p(key, assets[key]);\r\n        })).then(function (result) {\r\n            cb(result);\r\n        }).catch(function () {\r\n        });\r\n        return this;\r\n    };\r\n    DR.prototype.aB = function (name, vertex, fragment, textures, customUniforms) {\r\n        var _this = this;\r\n        var gl = this.gl;\r\n        var tA = this.cT(this.canvas.width, this.canvas.height, textures ? textures : [], customUniforms ? customUniforms : {});\r\n        var tB = this.cT(this.canvas.width, this.canvas.height, textures ? textures : [], customUniforms ? customUniforms : {});\r\n        this.targets.set(name, tA);\r\n        this.targets.set(\"_\" + name, tB);\r\n        var program = this.aP(name);\r\n        this.cS(program, 35633, this.header + vertex);\r\n        this.cS(program, 35632, this.header + fragment);\r\n        gl.linkProgram(program);\r\n        gl.validateProgram(program);\r\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n            var info = gl.getProgramInfoLog(program);\r\n            throw 'Could not compile WebGL program. \\n\\n' + info;\r\n        }\r\n        gl.useProgram(program);\r\n        if (textures) {\r\n            textures.forEach(function (tk) {\r\n                gl.bindTexture(3553, _this.textureCache.get(tk).src);\r\n            });\r\n        }\r\n        this.vertexPosition = gl.getAttribLocation(program, \"pos\");\r\n        gl.enableVertexAttribArray(this.vertexPosition);\r\n        for (var i = 0; i < gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS); ++i) {\r\n            var u = gl.getActiveUniform(program, i);\r\n            tA.locations.set(u.name, gl.getUniformLocation(program, u.name));\r\n        }\r\n        return this;\r\n    };\r\n    DR.prototype.R = function (time) {\r\n        var _this = this;\r\n        var gl = this.gl;\r\n        var main = this.mainProgram;\r\n        var tc = 0;\r\n        this.programs.forEach(function (current, key) {\r\n            gl.useProgram(current);\r\n            var fT = _this.targets.get(key);\r\n            var bT = _this.targets.get(\"_\" + key);\r\n            gl.uniform2f(fT.locations.get(\"resolution\"), _this.canvas.width, _this.canvas.height);\r\n            gl.uniform1f(fT.locations.get(\"time\"), time);\r\n            gl.uniform1f(fT.locations.get(\"frame\"), _this.frameCount);\r\n            var customUniforms = fT.uniforms;\r\n            customUniforms && Object.keys(customUniforms).forEach(function (v) {\r\n                customUniforms[v](fT.locations.get(v), gl, current, time);\r\n            });\r\n            var offset = 1;\r\n            var bl = gl.getUniformLocation(current, key);\r\n            gl.uniform1i(bl, 0);\r\n            gl.activeTexture(gl.TEXTURE0);\r\n            gl.bindTexture(gl.TEXTURE_2D, bT.texture);\r\n            fT.textures.forEach(function (tk, index) {\r\n                var ct = _this.textureCache.get(tk);\r\n                ct.fn &&\r\n                    ct.fn(gl, ct.src);\r\n                var loc = gl.getUniformLocation(current, tk);\r\n                gl.uniform1i(loc, index + offset);\r\n                gl.activeTexture(ct.unit);\r\n                gl.bindTexture(gl.TEXTURE_2D, ct.src);\r\n                tc++;\r\n            });\r\n            gl.bindBuffer(34962, _this.surfaceBuffer);\r\n            gl.vertexAttribPointer(0, 2, 5126, false, 0, 0);\r\n            gl.bindBuffer(34962, _this.buffer);\r\n            gl.vertexAttribPointer(0, 2, 5126, false, 0, 0);\r\n            gl.bindFramebuffer(36160, fT.framebuffer);\r\n            gl.clear(16384 | 256);\r\n            gl.drawArrays(4, 0, 6);\r\n            bT = fT;\r\n            fT = bT;\r\n        });\r\n        gl.useProgram(main);\r\n        gl.uniform2f(this.mainUniforms.get(\"resolution\"), this.canvas.width, this.canvas.height);\r\n        gl.uniform1f(this.mainUniforms.get(\"time\"), time);\r\n        Object.keys(this.cU).forEach(function (v) {\r\n            _this.cU[v](gl.getUniformLocation(main, v), gl, main, time);\r\n        });\r\n        gl.bindBuffer(34962, this.buffer);\r\n        gl.vertexAttribPointer(0, 2, 5126, false, 0, 0);\r\n        this.targets.forEach(function (target, key) {\r\n            gl.uniform1i(gl.getUniformLocation(main, key), tc);\r\n            gl.activeTexture(33984 + tc);\r\n            gl.bindTexture(3553, target.texture);\r\n            tc++;\r\n        });\r\n        gl.bindFramebuffer(36160, null);\r\n        gl.clear(16384 | 256);\r\n        gl.drawArrays(4, 0, 6);\r\n        this.frameCount++;\r\n    };\r\n    DR.prototype.cT = function (width, height, textures, customUniforms) {\r\n        var gl = this.gl;\r\n        var target = new Dt_1.Dt(gl, textures, customUniforms);\r\n        gl.bindTexture(3553, target.texture);\r\n        gl.texImage2D(3553, 0, 6408, width, height, 0, 6408, 5121, null);\r\n        gl.texParameteri(3553, 10242, 33071);\r\n        gl.texParameteri(3553, 10243, 33071);\r\n        gl.texParameteri(3553, 10240, 9728);\r\n        gl.texParameteri(3553, 10241, 9728);\r\n        gl.bindFramebuffer(36160, target.framebuffer);\r\n        gl.framebufferTexture2D(36160, 36064, 3553, target.texture, 0);\r\n        gl.bindRenderbuffer(36161, target.renderbuffer);\r\n        gl.renderbufferStorage(36161, 33189, width, height);\r\n        gl.framebufferRenderbuffer(36160, 36096, 36161, target.renderbuffer);\r\n        gl.bindTexture(3553, null);\r\n        gl.bindRenderbuffer(36161, null);\r\n        gl.bindFramebuffer(36160, null);\r\n        return target;\r\n    };\r\n    DR.prototype.run = function (t, fps) {\r\n        var _this = this;\r\n        var pt = performance.now();\r\n        var interval = 1000 / fps;\r\n        var dt = 0;\r\n        var a = function (t) {\r\n            requestAnimationFrame(a);\r\n            dt = t - pt;\r\n            if (dt > interval) {\r\n                pt = t - (dt % interval);\r\n                _this.R(pt / 1000);\r\n            }\r\n        };\r\n        a(t | 0);\r\n        return this;\r\n    };\r\n    DR.gT = function (mainVertex, mainFrag, textureVertex, textureFrag, w, h) {\r\n        var canvas = document.createElement(\"canvas\");\r\n        canvas.width = w;\r\n        canvas.height = h;\r\n        console.log(canvas.width, canvas.height);\r\n        var dr = new DR(canvas, mainVertex, mainFrag);\r\n        dr.aB(\"A\", textureVertex, textureFrag);\r\n        for (var i = 0; i < 2; i++) {\r\n            dr.R(i);\r\n        }\r\n        return canvas;\r\n    };\r\n    return DR;\r\n}());\r\nexports.DR = DR;\r\n\n\n//# sourceURL=webpack://demolishedrenderer/./src/DR.js?");

/***/ }),

/***/ "./src/Dt.js":
/*!*******************!*\
  !*** ./src/Dt.js ***!
  \*******************/
/*! flagged exports */
/*! export Dt [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__ */
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Dt = void 0;\r\nvar Dt = (function () {\r\n    function Dt(gl, textures, customUniforms) {\r\n        this.textures = new Array();\r\n        this.locations = new Map();\r\n        this.framebuffer = gl.createFramebuffer();\r\n        this.renderbuffer = gl.createRenderbuffer();\r\n        this.texture = gl.createTexture();\r\n        this.textures = textures;\r\n        this.uniforms = customUniforms;\r\n    }\r\n    return Dt;\r\n}());\r\nexports.Dt = Dt;\r\n\n\n//# sourceURL=webpack://demolishedrenderer/./src/Dt.js?");

/***/ }),

/***/ "./test/TestApp.js":
/*!*************************!*\
  !*** ./test/TestApp.js ***!
  \*************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: this is used directly at 2:23-27 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TestApp = void 0;\r\nvar DR_1 = __webpack_require__(/*! ../src/DR */ \"./src/DR.js\");\r\nvar volcanic_frag_glsl_1 = __importDefault(__webpack_require__(/*! ../test/glsl/volcanic-frag.glsl */ \"./test/glsl/volcanic-frag.glsl\"));\r\nvar volcanic_main_glsl_1 = __importDefault(__webpack_require__(/*! ../test/glsl/volcanic-main.glsl */ \"./test/glsl/volcanic-main.glsl\"));\r\nvar mainTexture_glsl_1 = __importDefault(__webpack_require__(/*! ../test/glsl/mainTexture.glsl */ \"./test/glsl/mainTexture.glsl\"));\r\nvar noise_texture_frag_glsl_1 = __importDefault(__webpack_require__(/*! ../test/glsl/noise.texture.frag.glsl */ \"./test/glsl/noise.texture.frag.glsl\"));\r\nvar stats_js_1 = __importDefault(__webpack_require__(/*! stats.js */ \"./node_modules/stats.js/build/stats.min.js\"));\r\nvar TestApp = (function () {\r\n    function TestApp() {\r\n        var _this = this;\r\n        this.stats = new stats_js_1.default();\r\n        this.stats.showPanel(0);\r\n        document.body.appendChild(this.stats.dom);\r\n        this.canvas = document.querySelector(\"canvas\");\r\n        var loop = function (t) {\r\n            _this.stats.begin();\r\n            dr.R(t / 1000);\r\n            _this.stats.end();\r\n            requestAnimationFrame(loop);\r\n        };\r\n        var vertex = \"layout(location = 0) in vec2 pos; \\n        out vec4 fragColor;\\n        void main(){\\n            gl_Position = vec4(pos.xy,0.0,1.0);\\n        }\";\r\n        var dr = new DR_1.DR(this.canvas, vertex, volcanic_main_glsl_1.default);\r\n        var iqNoise = DR_1.DR.gT(vertex, mainTexture_glsl_1.default, vertex, noise_texture_frag_glsl_1.default, 512, 512);\r\n        var base64 = iqNoise.toDataURL();\r\n        var image = document.createElement(\"img\");\r\n        image.src = base64;\r\n        document.querySelector(\".debug\").appendChild(image);\r\n        var volcanicTexture = {\r\n            \"iChannel2\": {\r\n                unit: 33987,\r\n                src: \"assets/texture2.jpg\"\r\n            },\r\n            \"iChannel1\": {\r\n                unit: 33986,\r\n                src: \"assets/texture.jpg\"\r\n            },\r\n            \"iChannel0\": {\r\n                unit: 33985,\r\n                src: \"assets/noise.png\"\r\n            },\r\n            \"iChannel4\": {\r\n                unit: 33988,\r\n                src: [{\r\n                        t: 0x8515,\r\n                        d: base64\r\n                    }, {\r\n                        t: 0x8516,\r\n                        d: base64\r\n                    },\r\n                    {\r\n                        t: 0x8517,\r\n                        d: base64\r\n                    }, {\r\n                        t: 0x8519,\r\n                        d: base64\r\n                    }, {\r\n                        t: 0x8519,\r\n                        d: base64\r\n                    },\r\n                    {\r\n                        t: 0x851A,\r\n                        d: base64\r\n                    }\r\n                ]\r\n            }\r\n        };\r\n        var orbitalTextures = {\r\n            \"iChannel1\": {\r\n                unit: 33985,\r\n                src: \"assets/texture2.jpg\"\r\n            },\r\n        };\r\n        dr.aA(volcanicTexture, function () {\r\n            dr.aB(\"bufferA\", vertex, volcanic_frag_glsl_1.default, [\"iChannel0\", \"iChannel1\", \"iChannel2\"]);\r\n            var ts = parseInt(location.hash.replace(\"#\", \"\"));\r\n            loop(ts || performance.now());\r\n        });\r\n    }\r\n    return TestApp;\r\n}());\r\nexports.TestApp = TestApp;\r\nvar instance = new TestApp();\r\n\n\n//# sourceURL=webpack://demolishedrenderer/./test/TestApp.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	__webpack_require__("./test/TestApp.js");
/******/ })()
;