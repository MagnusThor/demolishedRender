/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./test/TestApp.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/stats.js/build/stats.min.js":
/*!**************************************************!*\
  !*** ./node_modules/stats.js/build/stats.min.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){ true?module.exports=e():undefined})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n\n\n//# sourceURL=webpack:///./node_modules/stats.js/build/stats.min.js?");

/***/ }),

/***/ "./src/DR.js":
/*!*******************!*\
  !*** ./src/DR.js ***!
  \*******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dt_1 = __webpack_require__(/*! ./Dt */ \"./src/Dt.js\");\nvar DR = (function () {\n    function DR(canvas, v, f, cU) {\n        if (cU === void 0) { cU = {}; }\n        this.canvas = canvas;\n        this.cU = cU;\n        this.frameCount = 0;\n        this.header = \"#version 300 es\\n#ifdef GL_ES\\nprecision highp float;\\nprecision highp int;\\nprecision mediump sampler3D;\\n#endif\\n\";\n        this.targets = new Map();\n        this.mainUniforms = new Map();\n        this.programs = new Map();\n        this.textureCache = new Map();\n        var gl = canvas.getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        var c = 0, d;\n        for (var i in gl)\n            \"function\" == typeof gl[i] && (d = (c++ & 255).toString(16), d = d.match(/^[0-9].*$/) ? \"x\" + d : d, gl[d] = gl[i]);\n        this.gl = gl;\n        var mp = gl.createProgram();\n        this.mainProgram = mp;\n        gl.viewport(0, 0, canvas.width, canvas.height);\n        this.buffer = gl.createBuffer();\n        this.surfaceBuffer = gl.createBuffer();\n        this.cS(mp, 35633, this.header + v);\n        this.cS(mp, 35632, this.header + f);\n        gl.linkProgram(mp);\n        gl.validateProgram(mp);\n        if (!gl.getProgramParameter(mp, gl.LINK_STATUS)) {\n            var info = gl.getProgramInfoLog(mp);\n            throw 'Could not compile WebGL program. \\n\\n' + info;\n        }\n        gl.useProgram(mp);\n        for (var i_1 = 0; i_1 < gl.getProgramParameter(mp, gl.ACTIVE_UNIFORMS); ++i_1) {\n            var u = gl.getActiveUniform(mp, i_1);\n            this.mainUniforms.set(u.name, gl.getUniformLocation(mp, u.name));\n        }\n        this.screenVertexPosition = gl.getAttribLocation(mp, \"pos\");\n        gl.enableVertexAttribArray(this.screenVertexPosition);\n        gl.bindBuffer(34962, this.buffer);\n        gl.bufferData(34962, new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0]), 35044);\n    }\n    DR.prototype.cS = function (program, type, source) {\n        var gl = this.gl;\n        var shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        gl.attachShader(program, shader);\n        if (!gl.getShaderParameter(shader, 35713)) {\n            gl.getShaderInfoLog(shader).trim().split(\"\\n\").forEach(function (l) {\n                return console.error(\"[shader] \" + l);\n            });\n            throw new Error(\"Error while compiling vertex/fragment\" + source);\n        }\n        ;\n    };\n    DR.prototype.aP = function (name) {\n        var p = this.gl.createProgram();\n        this.programs.set(name, p);\n        return p;\n    };\n    DR.prototype.t = function (data, d) {\n        var gl = this.gl;\n        var texture = gl.createTexture();\n        gl.activeTexture(d);\n        gl.bindTexture(3553, texture);\n        if (data instanceof Image) {\n            gl.texImage2D(3553, 0, 6408, 6408, 5121, data);\n        }\n        else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n        }\n        gl.generateMipmap(3553);\n        return texture;\n    };\n    DR.prototype.tC = function (sources, d) {\n        var gl = this.gl;\n        var texture = gl.createTexture();\n        gl.activeTexture(d);\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n        var fetchAll = function (src, key) {\n            return new Promise(function (resolve, reject) {\n                var image = new Image();\n                image.dataset.key = key;\n                image.onerror = reject;\n                image.onload = function () {\n                    resolve(image);\n                };\n                image.src = src;\n            });\n        };\n        Promise.all(sources.map(function (i) {\n            return fetchAll(i.d, i.t);\n        })).then(function (data) {\n            data.forEach(function (image) {\n                var target = image.dataset.key;\n                var level = 0;\n                var internalFormat = gl.RGBA;\n                var width = 512;\n                var height = 512;\n                var format = gl.RGBA;\n                var type = gl.UNSIGNED_BYTE;\n                gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\n                gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n                gl.texImage2D(target, level, internalFormat, format, type, image);\n                gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\n            });\n        });\n        gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\n        return texture;\n    };\n    DR.prototype.aA = function (assets, cb) {\n        var _this = this;\n        var cache = function (k, n, v, f) {\n            _this.textureCache.set(k, { unit: n, src: v, fn: f });\n        };\n        var p = function (key, texture) {\n            var unit = texture.unit;\n            return new Promise(function (resolve) {\n                if (!texture.src) {\n                    cache(key, unit, _this.t(new Uint8Array(1024), unit), texture.fn);\n                    resolve(key);\n                }\n                else {\n                    if (!Array.isArray(texture.src)) {\n                        var i_2 = new Image();\n                        i_2.onload = function (e) {\n                            cache(key, unit, _this.t(i_2, unit), null);\n                            resolve(key);\n                        };\n                        i_2.src = texture.src;\n                    }\n                    else {\n                        cache(key, unit, _this.tC(texture.src, unit), texture.fn);\n                        resolve(key);\n                    }\n                }\n            });\n        };\n        Promise.all(Object.keys(assets).map(function (key) {\n            return p(key, assets[key]);\n        })).then(function (result) {\n            cb(result);\n        }).catch(function () {\n        });\n        return this;\n    };\n    DR.prototype.aB = function (name, vertex, fragment, textures, customUniforms) {\n        var _this = this;\n        var gl = this.gl;\n        var tA = this.cT(this.canvas.width, this.canvas.height, textures ? textures : [], customUniforms ? customUniforms : {});\n        var tB = this.cT(this.canvas.width, this.canvas.height, textures ? textures : [], customUniforms ? customUniforms : {});\n        this.targets.set(name, tA);\n        this.targets.set(\"_\" + name, tB);\n        var program = this.aP(name);\n        this.cS(program, 35633, this.header + vertex);\n        this.cS(program, 35632, this.header + fragment);\n        gl.linkProgram(program);\n        gl.validateProgram(program);\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            var info = gl.getProgramInfoLog(program);\n            throw 'Could not compile WebGL program. \\n\\n' + info;\n        }\n        gl.useProgram(program);\n        if (textures) {\n            textures.forEach(function (tk) {\n                gl.bindTexture(3553, _this.textureCache.get(tk).src);\n            });\n        }\n        this.vertexPosition = gl.getAttribLocation(program, \"pos\");\n        gl.enableVertexAttribArray(this.vertexPosition);\n        for (var i = 0; i < gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS); ++i) {\n            var u = gl.getActiveUniform(program, i);\n            tA.locations.set(u.name, gl.getUniformLocation(program, u.name));\n        }\n        return this;\n    };\n    DR.prototype.R = function (time) {\n        var _this = this;\n        var gl = this.gl;\n        var main = this.mainProgram;\n        var tc = 0;\n        this.programs.forEach(function (current, key) {\n            gl.useProgram(current);\n            var fT = _this.targets.get(key);\n            var bT = _this.targets.get(\"_\" + key);\n            gl.uniform2f(fT.locations.get(\"resolution\"), _this.canvas.width, _this.canvas.height);\n            gl.uniform1f(fT.locations.get(\"time\"), time);\n            gl.uniform1f(fT.locations.get(\"frame\"), _this.frameCount);\n            var customUniforms = fT.uniforms;\n            customUniforms && Object.keys(customUniforms).forEach(function (v) {\n                customUniforms[v](fT.locations.get(v), gl, current, time);\n            });\n            var offset = 1;\n            var bl = gl.getUniformLocation(current, key);\n            gl.uniform1i(bl, 0);\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, bT.texture);\n            fT.textures.forEach(function (tk, index) {\n                var ct = _this.textureCache.get(tk);\n                ct.fn &&\n                    ct.fn(gl, ct.src);\n                var loc = gl.getUniformLocation(current, tk);\n                gl.uniform1i(loc, index + offset);\n                gl.activeTexture(ct.unit);\n                gl.bindTexture(gl.TEXTURE_2D, ct.src);\n                tc++;\n            });\n            gl.bindBuffer(34962, _this.surfaceBuffer);\n            gl.vertexAttribPointer(0, 2, 5126, false, 0, 0);\n            gl.bindBuffer(34962, _this.buffer);\n            gl.vertexAttribPointer(0, 2, 5126, false, 0, 0);\n            gl.bindFramebuffer(36160, fT.framebuffer);\n            gl.clear(16384 | 256);\n            gl.drawArrays(4, 0, 6);\n            bT = fT;\n            fT = bT;\n        });\n        gl.useProgram(main);\n        gl.uniform2f(this.mainUniforms.get(\"resolution\"), this.canvas.width, this.canvas.height);\n        gl.uniform1f(this.mainUniforms.get(\"time\"), time);\n        Object.keys(this.cU).forEach(function (v) {\n            _this.cU[v](gl.getUniformLocation(main, v), gl, main, time);\n        });\n        gl.bindBuffer(34962, this.buffer);\n        gl.vertexAttribPointer(0, 2, 5126, false, 0, 0);\n        this.targets.forEach(function (target, key) {\n            gl.uniform1i(gl.getUniformLocation(main, key), tc);\n            gl.activeTexture(33984 + tc);\n            gl.bindTexture(3553, target.texture);\n            tc++;\n        });\n        gl.bindFramebuffer(36160, null);\n        gl.clear(16384 | 256);\n        gl.drawArrays(4, 0, 6);\n        this.frameCount++;\n    };\n    DR.prototype.cT = function (width, height, textures, customUniforms) {\n        var gl = this.gl;\n        var target = new Dt_1.Dt(gl, textures, customUniforms);\n        gl.bindTexture(3553, target.texture);\n        gl.texImage2D(3553, 0, 6408, width, height, 0, 6408, 5121, null);\n        gl.texParameteri(3553, 10242, 33071);\n        gl.texParameteri(3553, 10243, 33071);\n        gl.texParameteri(3553, 10240, 9728);\n        gl.texParameteri(3553, 10241, 9728);\n        gl.bindFramebuffer(36160, target.framebuffer);\n        gl.framebufferTexture2D(36160, 36064, 3553, target.texture, 0);\n        gl.bindRenderbuffer(36161, target.renderbuffer);\n        gl.renderbufferStorage(36161, 33189, width, height);\n        gl.framebufferRenderbuffer(36160, 36096, 36161, target.renderbuffer);\n        gl.bindTexture(3553, null);\n        gl.bindRenderbuffer(36161, null);\n        gl.bindFramebuffer(36160, null);\n        return target;\n    };\n    DR.prototype.run = function (t, fps) {\n        var _this = this;\n        var pt = performance.now();\n        var interval = 1000 / fps;\n        var dt = 0;\n        var a = function (t) {\n            requestAnimationFrame(a);\n            dt = t - pt;\n            if (dt > interval) {\n                pt = t - (dt % interval);\n                _this.R(pt / 1000);\n            }\n        };\n        a(t | 0);\n        return this;\n    };\n    DR.gT = function (mainVertex, mainFrag, textureVertex, textureFrag, w, h) {\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = w;\n        canvas.height = h;\n        console.log(canvas.width, canvas.height);\n        var dr = new DR(canvas, mainVertex, mainFrag);\n        dr.aB(\"A\", textureVertex, textureFrag);\n        for (var i = 0; i < 2; i++) {\n            dr.R(i);\n        }\n        return canvas;\n    };\n    return DR;\n}());\nexports.DR = DR;\n\n\n//# sourceURL=webpack:///./src/DR.js?");

/***/ }),

/***/ "./src/Dt.js":
/*!*******************!*\
  !*** ./src/Dt.js ***!
  \*******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dt = (function () {\n    function Dt(gl, textures, customUniforms) {\n        this.textures = new Array();\n        this.locations = new Map();\n        this.framebuffer = gl.createFramebuffer();\n        this.renderbuffer = gl.createRenderbuffer();\n        this.texture = gl.createTexture();\n        this.textures = textures;\n        this.uniforms = customUniforms;\n    }\n    return Dt;\n}());\nexports.Dt = Dt;\n\n\n//# sourceURL=webpack:///./src/Dt.js?");

/***/ }),

/***/ "./test/TestApp.js":
/*!*************************!*\
  !*** ./test/TestApp.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DR_1 = __webpack_require__(/*! ../src/DR */ \"./src/DR.js\");\nvar volcanic_frag_glsl_1 = __importDefault(__webpack_require__(/*! ../test/glsl/volcanic-frag.glsl */ \"./test/glsl/volcanic-frag.glsl\"));\nvar volcanic_main_glsl_1 = __importDefault(__webpack_require__(/*! ../test/glsl/volcanic-main.glsl */ \"./test/glsl/volcanic-main.glsl\"));\nvar mainTexture_glsl_1 = __importDefault(__webpack_require__(/*! ../test/glsl/mainTexture.glsl */ \"./test/glsl/mainTexture.glsl\"));\nvar noise_texture_frag_glsl_1 = __importDefault(__webpack_require__(/*! ../test/glsl/noise.texture.frag.glsl */ \"./test/glsl/noise.texture.frag.glsl\"));\nvar stats_js_1 = __importDefault(__webpack_require__(/*! stats.js */ \"./node_modules/stats.js/build/stats.min.js\"));\nvar TestApp = (function () {\n    function TestApp() {\n        var _this = this;\n        this.stats = new stats_js_1.default();\n        this.stats.showPanel(0);\n        document.body.appendChild(this.stats.dom);\n        this.canvas = document.querySelector(\"canvas\");\n        var loop = function (t) {\n            _this.stats.begin();\n            dr.R(t / 1000);\n            _this.stats.end();\n            requestAnimationFrame(loop);\n        };\n        var vertex = \"layout(location = 0) in vec2 pos; \\n        out vec4 fragColor;\\n        void main(){\\n            gl_Position = vec4(pos.xy,0.0,1.0);\\n        }\";\n        var dr = new DR_1.DR(this.canvas, vertex, volcanic_main_glsl_1.default);\n        var iqNoise = DR_1.DR.gT(vertex, mainTexture_glsl_1.default, vertex, noise_texture_frag_glsl_1.default, 512, 512);\n        var base64 = iqNoise.toDataURL();\n        var image = document.createElement(\"img\");\n        image.src = base64;\n        document.querySelector(\".debug\").appendChild(image);\n        var volcanicTexture = {\n            \"iChannel2\": {\n                unit: 33987,\n                src: \"/test/assets/texture2.jpg\"\n            },\n            \"iChannel1\": {\n                unit: 33986,\n                src: \"/test/assets/texture.jpg\"\n            },\n            \"iChannel0\": {\n                unit: 33985,\n                src: \"/test/assets/noise.png\"\n            },\n            \"iChannel4\": {\n                unit: 33988,\n                src: [{\n                        t: 0x8515,\n                        d: base64\n                    }, {\n                        t: 0x8516,\n                        d: base64\n                    },\n                    {\n                        t: 0x8517,\n                        d: base64\n                    }, {\n                        t: 0x8519,\n                        d: base64\n                    }, {\n                        t: 0x8519,\n                        d: base64\n                    },\n                    {\n                        t: 0x851A,\n                        d: base64\n                    }\n                ]\n            }\n        };\n        var orbitalTextures = {\n            \"iChannel1\": {\n                unit: 33985,\n                src: \"/test/assets/texture2.jpg\"\n            },\n        };\n        dr.aA(volcanicTexture, function () {\n            dr.aB(\"bufferA\", vertex, volcanic_frag_glsl_1.default, [\"iChannel0\", \"iChannel1\", \"iChannel2\"]);\n            var ts = parseInt(location.hash.replace(\"#\", \"\"));\n            loop(ts || performance.now());\n        });\n    }\n    return TestApp;\n}());\nexports.TestApp = TestApp;\nvar instance = new TestApp();\n\n\n//# sourceURL=webpack:///./test/TestApp.js?");

/***/ }),

/***/ "./test/glsl/mainTexture.glsl":
/*!************************************!*\
  !*** ./test/glsl/mainTexture.glsl ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"uniform vec2 resolution;\\nuniform sampler2D A;\\nout vec4 fragColor;\\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\\n{\\n    vec2 q=fragCoord/resolution.xy;\\n    vec3 col=texture(A,q).xyz;\\n    fragColor=vec4(col,1.);\\n}\\nvoid main(void){\\n    mainImage(fragColor,gl_FragCoord.xy);\\n}\");\n\n//# sourceURL=webpack:///./test/glsl/mainTexture.glsl?");

/***/ }),

/***/ "./test/glsl/noise.texture.frag.glsl":
/*!*******************************************!*\
  !*** ./test/glsl/noise.texture.frag.glsl ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"uniform float time;\\nuniform vec2 resolution;\\nuniform int frame;\\nout vec4 fragColor;\\n\\nfloat g(in vec2 xy, in float seed)\\n{\\n    return fract(tan(distance(xy*1.61803398874989484820459, xy)*seed)*xy.x);\\n}\\n\\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\\n{\\n     vec2 uv = fragCoord.xy;\\n     uv -= floor(uv / 289.0) * 289.0;\\n     uv += vec2(223.35734, 550.56781);\\n     uv *= uv;\\n     float xy = uv.x * uv.y;\\n     fragColor = vec4(fract(xy * 0.00000012),\\n               fract(xy * 0.00000543),\\n               fract(xy * 0.00000192),\\n               fract(xy * 0.00000423));\\n\\n     // float t= time;\\n     \\n     // vec2 uv = fragCoord.xy ;\\n\\n     // vec4 rgba = vec4(g(uv, fract(t)+1.0), // r\\n     //            g(uv, fract(t)+2.0), // g\\n     //            g(uv, fract(t)+3.0), // b\\n     //            1.0);   \\n\\n\\t\\n     // fragColor = rgba;\\n}\\nvoid main(void){\\n     mainImage(fragColor,gl_FragCoord.xy);\\n}\");\n\n//# sourceURL=webpack:///./test/glsl/noise.texture.frag.glsl?");

/***/ }),

/***/ "./test/glsl/volcanic-frag.glsl":
/*!**************************************!*\
  !*** ./test/glsl/volcanic-frag.glsl ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"uniform float time;\\nuniform vec2 mouse;\\nuniform vec2 resolution;\\nuniform sampler2D iChannel0;\\nuniform sampler2D iChannel1;\\nuniform sampler2D iChannel2;\\nuniform int frame;\\nuniform vec3 iMouse;\\n\\nout vec4 fragColor;\\n\\n#define iTime time\\n#define iResolution resolution\\n#define HIGH_QUALITY_NOISE\\n\\nfloat noise( in vec3 x ){\\n    vec3 p = floor(x);\\n    vec3 f = fract(x);\\n\\tf = f*f*(3.0-2.0*f);\\n#ifndef HIGH_QUALITY_NOISE\\n\\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\\n\\tvec2 rg = textureLod( iChannel0, (uv+ 0.5)/256.0, 0. ).yx;\\n#else\\n\\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z);\\n\\tvec2 rg1 = textureLod( iChannel0, (uv+ vec2(0.5,0.5))/256.0, 0. ).yx;\\n\\tvec2 rg2 = textureLod( iChannel0, (uv+ vec2(1.5,0.5))/256.0, 0. ).yx;\\n\\tvec2 rg3 = textureLod( iChannel0, (uv+ vec2(0.5,1.5))/256.0, 0. ).yx;\\n\\tvec2 rg4 = textureLod( iChannel0, (uv+ vec2(1.5,1.5))/256.0, 0. ).yx;\\n\\tvec2 rg = mix( mix(rg1,rg2,f.x), mix(rg3,rg4,f.x), f.y );\\n#endif\\t\\n\\treturn mix( rg.x, rg.y, f.z );\\n}\\n\\nfloat noise( in vec2 x )\\n{\\n    vec2 p = floor(x);\\n    vec2 f = fract(x);\\n\\tvec2 uv = p.xy + f.xy*f.xy*(3.0-2.0*f.xy);\\n\\treturn textureLod( iChannel0, (uv+118.4)/256.0, 0. ).x;\\n}\\n\\nvec4 texcube( sampler2D sam, in vec3 p, in vec3 n )\\n{\\n\\tvec4 x = texture( sam, p.yz );\\n\\tvec4 y = texture( sam, p.zx );\\n\\tvec4 z = texture( sam, p.xy );\\n\\treturn x*abs(n.x) + y*abs(n.y) + z*abs(n.z);\\n}\\n\\n//=====================================================================\\n\\nfloat lava( vec2 p )\\n{\\n\\tp += vec2(2.0,4.0);\\n    float f;\\n    f  = 0.5000*noise( p ); p = p*2.02;\\n    f += 0.2500*noise( p ); p = p*2.03;\\n    f += 0.1250*noise( p ); p = p*2.01;\\n    f += 0.0625*noise( p );\\n    return f;\\n}\\n\\nconst mat3 m = mat3( 0.00,  0.80,  0.60,\\n                    -0.80,  0.36, -0.48,\\n                    -0.60, -0.48,  0.64 );\\n\\nfloat displacement( vec3 p )\\n{\\n\\tp += vec3(1.0,0.0,0.8);\\n\\t\\n    float f;\\n    f  = 0.5000*noise( p ); p = m*p*2.02;\\n    f += 0.2500*noise( p ); p = m*p*2.03;\\n    f += 0.1250*noise( p ); p = m*p*2.01;\\n    f += 0.0625*noise( p ); \\n\\t\\n\\tfloat n = noise( p*3.5 );\\n    f += 0.03*n*n;\\n\\t\\n    return f;\\n}\\n\\nfloat mapTerrain( in vec3 pos )\\n{\\n\\treturn pos.y*0.1 + (displacement(pos*vec3(0.8,1.0,0.8)) - 0.4)*(1.0-smoothstep(1.0,3.0,pos.y));\\n}\\n\\nfloat raymarchTerrain( in vec3 ro, in vec3 rd )\\n{\\n\\tfloat maxd = 30.0;\\n    float t = 0.1;\\n    for( int i=0; i<256; i++ )\\n    {\\n\\t    float h = mapTerrain( ro+rd*t );\\n        if( h<(0.001*t) || t>maxd ) break;\\n        t += h*0.8;\\n    }\\n\\n    if( t>maxd ) t=-1.0;\\n    return t;\\n}\\n\\nvec3 calcNormal( in vec3 pos, in float t )\\n{\\n    vec3 eps = vec3( max(0.02,0.001*t),0.0,0.0);\\n\\treturn normalize( vec3(\\n           mapTerrain(pos+eps.xyy) - mapTerrain(pos-eps.xyy),\\n           mapTerrain(pos+eps.yxy) - mapTerrain(pos-eps.yxy),\\n           mapTerrain(pos+eps.yyx) - mapTerrain(pos-eps.yyx) ) );\\n\\n}\\n\\nvec3 lig = normalize( vec3(-0.3,0.4,0.7) );\\n\\t\\nvec4 mapClouds( in vec3 pos )\\n{\\n\\tvec3 q = pos*0.5 + vec3(0.0,-iTime,0.0);\\n\\t\\n\\tfloat d;\\n    d  = 0.5000*noise( q ); q = q*2.02;\\n    d += 0.2500*noise( q ); q = q*2.03;\\n    d += 0.1250*noise( q ); q = q*2.01;\\n    d += 0.0625*noise( q );\\n\\t\\t\\n\\td = d - 0.55;\\n\\td *= smoothstep( 0.5, 0.55, lava(0.1*pos.xz)+0.01 );\\n\\n\\td = clamp( d, 0.0, 1.0 );\\n\\t\\n\\tvec4 res = vec4( d );\\n\\n\\tres.xyz = mix( vec3(1.0,0.8,0.7), 0.2*vec3(0.4,0.4,0.4), res.x );\\n\\tres.xyz *= 0.25;\\n\\tres.xyz *= 0.5 + 0.5*smoothstep( -2.0, 1.0, pos.y );\\n\\t\\n\\treturn res;\\n}\\n\\nvec4 raymarchClouds( in vec3 ro, in vec3 rd, in vec3 bcol, float tmax )\\n{\\n\\tvec4 sum = vec4( 0.0 );\\n\\n\\tfloat sun = pow( clamp( dot(rd,lig), 0.0, 1.0 ),6.0 );\\n\\tfloat t = 0.0;\\n\\tfor( int i=0; i<60; i++ )\\n\\t{\\n\\t\\tif( t>tmax || sum.w>0.95 ) break;//continue;\\n\\t\\tvec3 pos = ro + t*rd;\\n\\t\\tvec4 col = mapClouds( pos );\\n\\t\\t\\n        col.xyz += vec3(1.0,0.7,0.4)*0.4*sun*(1.0-col.w);\\n\\t\\tcol.xyz = mix( col.xyz, bcol, 1.0-exp(-0.00006*t*t*t) );\\n\\t\\t\\n\\t\\tcol.rgb *= col.a;\\n\\n\\t\\tsum = sum + col*(1.0 - sum.a);\\t\\n\\n\\t\\tt += max(0.1,0.05*t);\\n\\t}\\n\\n\\tsum.xyz /= (0.001+sum.w);\\n\\n\\treturn clamp( sum, 0.0, 1.0 );\\n}\\n\\nfloat softshadow( in vec3 ro, in vec3 rd, float mint, float k )\\n{\\n    float res = 1.0;\\n    float t = mint;\\n    for( int i=0; i<64; i++ )\\n    {\\n        float h = mapTerrain(ro + rd*t);\\n\\t\\th = max( h, 0.0 );\\n        res = min( res, k*h/t );\\n        t += clamp( h, 0.02, 0.5 );\\n\\t\\tif( res<0.001 ) break;\\n    }\\n    return clamp(res,0.0,1.0);\\n}\\n\\nvec3 path( float time )\\n{\\n\\treturn vec3( 16.0*cos(0.2+0.5*.1*time*1.5), 1.5, 16.0*sin(0.1+0.5*0.11*time*1.5) );\\n\\t\\n}\\n\\nmat3 setCamera( in vec3 ro, in vec3 ta, float cr )\\n{\\n\\tvec3 cw = normalize(ta-ro);\\n\\tvec3 cp = vec3(sin(cr), cos(cr),0.0);\\n\\tvec3 cu = normalize( cross(cw,cp) );\\n\\tvec3 cv = normalize( cross(cu,cw) );\\n    return mat3( cu, cv, cw );\\n}\\n\\nvoid moveCamera( float time, out vec3 oRo, out vec3 oTa, out float oCr, out float oFl )\\n{\\n\\tvec3 ro = path( time+0.0 );\\n\\tvec3 ta = path( time+1.6 );\\n\\tta.y *= 0.35 + 0.25*sin(0.09*time);\\n\\tfloat cr = 0.3*sin(1.0+0.07*time);\\n    oRo = ro;\\n    oTa = ta;\\n    oCr = cr;\\n    oFl = 2.1;\\n}\\n\\n\\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\\n{\\n    vec2 q = fragCoord.xy / iResolution.xy;\\n\\tvec2 p = -1.0 + 2.0*q;\\n\\tp.x *= iResolution.x / iResolution.y;\\n\\t\\n    // camera\\t\\n\\tfloat off = step( 0.001, iMouse.z )*6.0*iMouse.x/iResolution.x;\\n    float time = 3.4 +iTime + off;\\n\\n    vec3 ro, ta; float cr, fl;\\n    moveCamera( time, ro, ta, cr, fl );\\n\\t// camera2world transform\\n    mat3 cam = setCamera( ro, ta, cr );\\n\\n    // ray    \\n    vec3 rd = cam * normalize(vec3(p.xy,fl));\\n\\n    // sky\\t \\n\\tvec3 col = vec3(0.32,0.36,0.4) - rd.y*0.4;\\n    float sun = clamp( dot(rd,lig), 0.0, 1.0 );\\n\\tcol += vec3(1.0,0.8,0.4)*0.2*pow( sun, 6.0 );\\n    col *= 0.9;\\n\\n\\tvec3 bcol = col;\\n    \\n    // terrain\\t\\n\\tfloat t = raymarchTerrain(ro, rd);\\n    float st = t;\\n    if( t>0.0 )\\n\\t{\\n\\t\\tvec3 pos = ro + t*rd;\\n\\t\\tvec3 nor = calcNormal( pos, t );\\n\\t//\\tvec3 ref = reflect( rd, nor );\\n\\n\\t\\tvec3 bn = -1.0 + 2.0*texcube( iChannel0, 3.0*pos/4.0, nor ).xyz;\\n\\t\\tnor = normalize( nor + 0.6*bn );\\n\\t\\t\\n\\t\\tfloat hh = 1.0 - smoothstep( -2.0, 1.0, pos.y );\\n\\n        // lighting\\n\\t\\tfloat sun = clamp( dot( nor, lig ), 0.0, 1.0 );\\n\\t\\tfloat sha = 0.0; if( sun>0.01) sha=softshadow(pos,lig,0.01,32.0);\\n\\t\\tfloat bac = clamp( dot( nor, normalize(lig*vec3(-1.0,0.0,-1.0)) ), 0.0, 1.0 );\\n\\t\\tfloat sky = 0.5 + 0.5*nor.y;\\n        float lav = smoothstep( 0.5, 0.55, lava(0.1*pos.xz) )*hh*clamp(0.5-0.5*nor.y,0.0,1.0);\\n\\t\\tfloat occ = pow( (1.0-displacement(pos*vec3(0.8,1.0,0.8)))*1.6-0.5, 2.0 );\\n\\n\\t\\tfloat amb = 1.0;\\n\\n\\t\\tcol = vec3(0.8);\\n\\n\\t\\tvec3 lin = vec3(0.0);\\n\\t\\tlin += 1.4*sun*vec3(1.80,1.27,0.99)*pow(vec3(sha),vec3(1.0,1.2,1.5));\\n\\t\\tlin += 0.9*sky*vec3(0.16,0.20,0.40)*occ;\\n\\t\\tlin += 0.9*bac*vec3(0.40,0.28,0.20)*occ;\\n\\t\\tlin += 0.9*amb*vec3(0.15,0.17,0.20)*occ;\\n\\t\\tlin += lav*vec3(3.00,0.61,0.00);\\n\\n        // surface shading/material\\t\\t\\n\\t\\tcol = texcube( iChannel1, 0.5*pos, nor ).xyz;\\n\\t\\tcol = col*(0.2+0.8*texcube( iChannel2, 4.0*vec3(2.0,8.0,2.0)*pos, nor ).x);\\n\\t\\tvec3 verde = vec3(1.0,0.9,0.2);\\n\\t\\tverde *= texture( iChannel2, pos.xz ).xyz;\\n\\t\\tcol = mix( col, 0.8*verde, hh );\\n\\t\\t\\n\\t\\tfloat vv = smoothstep( 0.0, 0.8, nor.y )*smoothstep(0.0, 0.1, pos.y-0.8 );\\n\\t\\tverde = vec3(0.2,0.45,0.1);\\n\\t\\tverde *= texture( iChannel2, 30.0*pos.xz ).xyz;\\n\\t\\tverde += 0.2*texture( iChannel2, 1.0*pos.xz ).xyz;\\n\\t\\tvv *= smoothstep( 0.0, 0.5, texture( iChannel2, 0.1*pos.xz + 0.01*nor.x ).x );\\n\\t\\tcol = mix( col, verde*1.1, vv );\\n\\t\\t\\n\\t\\tcol = lin * col;\\n\\t\\t\\n        // sun spec\\n        vec3 hal = normalize(lig-rd);\\n        col += 1.0*\\n               vec3(1.80,1.27,0.99)*\\n               pow( clamp(dot(nor,hal),0.0,1.0), 16.0 ) * \\n               sun*sha*\\n               (0.04+0.96*pow(clamp(1.0+dot(hal,rd),0.0,1.0),5.0));\\n            \\n\\t\\t// atmospheric\\n\\t\\tcol = mix( col, (1.0-0.7*hh)*bcol, 1.0-exp(-0.00006*t*t*t) );\\n    }\\n\\n    // sun glow\\n    col += vec3(1.0,0.6,0.2)*0.2*pow( sun, 2.0 )*clamp( (rd.y+0.4)/(0.0+0.4),0.0,1.0);\\n\\t\\n    // smoke\\t\\n\\t{\\n\\tif( t<0.0 ) t=600.0;\\n    vec4 res = raymarchClouds( ro, rd, bcol, t );\\n\\tcol = mix( col, res.xyz, res.w );\\n\\t}\\n\\n    // gamma\\t\\n\\tcol = pow( clamp( col, 0.0, 1.0 ), vec3(0.45) );\\n\\n    // contrast, desat, tint and vignetting\\t\\n\\tcol = col*0.3 + 0.7*col*col*(3.0-2.0*col);\\n\\tcol = mix( col, vec3(col.x+col.y+col.z)*0.33, 0.2 );\\n    col *= 1.25*vec3(1.02,1.05,1.0);\\n      \\n    //-------------------------------------\\n\\t// velocity vectors (through depth reprojection)\\n    //-------------------------------------\\n    float vel = -1.0;\\n    if( st>0.0 )\\n    {\\n        // old camera position\\n        float oldTime = time - 1.0/30.0; // 1/30 of a second blur\\n        vec3 oldRo, oldTa; float oldCr, oldFl;\\n        moveCamera( oldTime, oldRo, oldTa, oldCr, oldFl );\\n        mat3 oldCam = setCamera( oldRo, oldTa, oldCr );\\n\\n        // world spcae\\n        vec3 wpos = ro + rd*st;\\n        // camera space\\n        vec3 cpos = vec3( dot( wpos - oldRo, oldCam[0] ),\\n                          dot( wpos - oldRo, oldCam[1] ),\\n                          dot( wpos - oldRo, oldCam[2] ) );\\n        // ndc space\\n        vec2 npos = oldFl * cpos.xy / cpos.z;\\n        // screen space\\n        vec2 spos = 0.5 + 0.5*npos*vec2(iResolution.y/iResolution.x,1.0);\\n\\n\\n        // compress velocity vector in a single float\\n        vec2 uv = fragCoord/iResolution.xy;\\n        spos = clamp( 0.5 + 0.5*(spos - uv)/0.25, 0.0, 1.0 );\\n        vel = floor(spos.x*255.0) + floor(spos.y*255.0)*256.0;\\n    }\\n\\n    fragColor = vec4( col, vel );\\n}\\n\\n\\nvoid main(void){\\n     mainImage(fragColor,gl_FragCoord.xy);\\n}\");\n\n//# sourceURL=webpack:///./test/glsl/volcanic-frag.glsl?");

/***/ }),

/***/ "./test/glsl/volcanic-main.glsl":
/*!**************************************!*\
  !*** ./test/glsl/volcanic-main.glsl ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"uniform vec2 resolution;\\nuniform sampler2D bufferA;\\nout vec4 fragColor;\\n\\n#define iTime time\\n#define iResolution resolution\\n\\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\\n{\\n    vec2 uv = fragCoord/iResolution.xy;\\n    vec4 data = texture( bufferA, uv );\\n    vec3 col = data.xyz;\\n    // vignetting\\t\\n\\tcol *= 0.5 + 0.5*pow( 16.0*uv.x*uv.y*(1.0-uv.x)*(1.0-uv.y), 0.1 );\\n    fragColor = vec4(col,1.);\\n}\\n\\n\\nvoid main(void){\\n    mainImage(fragColor,gl_FragCoord.xy);\\n}\\n\");\n\n//# sourceURL=webpack:///./test/glsl/volcanic-main.glsl?");

/***/ })

/******/ });