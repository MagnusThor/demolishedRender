export declare const Scene2 = "uniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nout vec4 fragColor;\n\n#define iTime  time\n#define iResolution  resolution\n\n\n#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n\n\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    vec3 p;\n   vec3 r= vec3(iResolution.x,iResolution.y,0.);\n\t    \n    vec3 d =normalize(vec3((C-.5*r.xy)/r.y,1.)); \n for(float i=0.,g=0.,e,s;\n        ++i<99.;\n        O.xyz+=5e-5*abs(cos(vec3(3,2,1)+log(s*9.)))/dot(p,p)/e\n    )\n    {\n        p=g*d;\n        p.z+=iTime*.3;\n        p=R(p,normalize(vec3(1,2,3)),.5);   \n        s=2.5;\n        p=abs(mod(p-1.,2.)-1.)-1.;\n        for(int j=0;j++<10;)\n            p=1.-abs(p-1.),\n            s*=e=-1.8/dot(p,p),\n            p=p*e-.7;\n            g+=e=abs(p.z)/s+.001;           \n     }\n}\nvoid main(){\n    mainImage(fragColor,gl_FragCoord.xy);\n\n}\n\n";
//# sourceMappingURL=Scene2.d.ts.map