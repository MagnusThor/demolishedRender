export declare const mainFragment = "\n\nuniform vec2 resolution;\nuniform float time;\n\nuniform float outTexture;\n\nuniform sampler2D iChannel0;\nuniform sampler2D iChannel1;\nuniform sampler2D iChannel2;\n\n\nout vec4 fragColor;\n\n\n#define iTime time\n#define res resolution \n\nconst float GA =2.399; \nconst mat2 rot = mat2(cos(GA),sin(GA),-sin(GA),cos(GA));\n\n\nvec3 dof(sampler2D tex,vec2 uv,float rad)\n{\n\tvec3 acc=vec3(0);\n    vec2 pixel=vec2(.002*res.y/res.x,.002),angle=vec2(0,rad);;\n    rad=1.;\n\tfor (int j=0;j<80;j++){  \n        rad += 1./rad;\n\t    angle*=rot;\n        vec4 col=texture(tex,uv+pixel*(rad-1.)*angle);\n\t\tacc+=col.xyz;\n\t}\n\treturn acc/80.;\n}\n\n//-------------------------------------------------------------------------------------------\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n\n\tvec2 uv = gl_FragCoord.xy / res.xy;\n\n\tif(outTexture ==0.0){\n\t\tfragColor=vec4(dof(iChannel0,uv,texture(iChannel0,uv).w),1.);\n\n\t}else if(outTexture ==1.0){\n\t\tfragColor=vec4(dof(iChannel1,uv,texture(iChannel1,uv).w),1.);\n\n\t}else fragColor=vec4(dof(iChannel2,uv,texture(iChannel2,uv).w),1.);\n\n\t\n}\n\nvoid main(){\n\n    mainImage(fragColor,gl_FragCoord.xy);\n\n}";
//# sourceMappingURL=mainFragment.d.ts.map