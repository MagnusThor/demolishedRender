module.exports = "uniform vec2 resolution;uniform float time;uniform float sI;uniform sampler2D iChannel0;uniform sampler2D iChannel1;uniform sampler2D iChannel2;uniform sampler2D iChannel3;uniform sampler2D iChannel4;uniform sampler2D iChannel5;uniform sampler2D[4]iChannels;out vec4 fragColor;\n#define iTime  time\n#define res  resolution \nconst float AC=2.399;const mat2 AD=mat2(cos(AC),sin(AC),-sin(AC),cos(AC));vec3 AE(sampler2D AF,vec2 m,float AG){vec3 AH=vec3(0);vec2 AI=vec2(.002*res.y/res.x,.002),e=vec2(0,AG);;AG=1.;for(int AJ=0;AJ<80;AJ++){AG+=1./AG;e*=AD;vec4 AK=texture(AF,m+AI*(AG-1.)*e);AH+=AK.xyz;}return AH/80.;}void k(out vec4 fragColor,in vec2 l){vec4 q=vec4(vec3(0.),1.);vec2 m=gl_FragCoord.xy/res.xy;float AL,AM,AN,AO;AL=min(3.*abs(sin((.1*iTime)*3.1415/3.)),1.);AM=min(2.5*abs(sin((.1*iTime)*3.1415/3.)),1.);AN=((fract(m.x*6.-4.*m.y*(1.-AM))<0.5||m.y<AL)&&(fract(m.x*6.-4.*m.y*(1.-AM))>=0.5||m.y>1.-AL))?1.:0.;AO=(fract(m.x*12.-0.05-8.*m.y*(1.-AM))>0.9)?AM:1.;m.y=(fract(m.x*6.-4.*m.y*(1.-AM))<0.5)?m.y-(1.-AL):m.y+=(1.-AL);if(sI==0.){q=vec4(AE(iChannel0,m,texture(iChannel4,m).w),1.);}else if(sI==1.){q=vec4(AE(iChannel1,m,texture(iChannel1,m).w),1.);}else if(sI==2.){q=vec4(AE(iChannel2,m,texture(iChannel2,m).w),1.);}else if(sI==3.){q=vec4(AE(iChannel3,m,texture(iChannel3,m).w),1.);}else if(sI==4.){q=vec4(AE(iChannel4,m,texture(iChannel4,m).w),1.);}else q=vec4(AE(iChannel5,m,texture(iChannel5,m).w),1.);fragColor=q*AN*AO*AM;}void main(){k(fragColor,gl_FragCoord.xy);}"